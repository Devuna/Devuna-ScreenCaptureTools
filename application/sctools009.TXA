[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of xxx (https://github.com/Devuna/xxx)
!
!    xxx is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    xxx is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with xxx.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_SaveClipboard
PROTOTYPE '(UNSIGNED  param_hWindow,  *CSTRING param_szFilename, BYTE param_Compress=0),USHORT,PROC'
PARAMETERS '(param_hWindow,  param_szFilename, param_Compress)'
GLOBAL
[COMMON]
DESCRIPTION 'Save Clipboard Bitmap'
FROM ABC Source
MODIFIED '2013/07/18' '12:43:04'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s9),USE(szJobName)
[REPORTCONTROLS]
! STRING(@s9),USE(szJobName)
szJobName                CSTRING(10)
!!> GUID('b859f673-5603-4d2e-8f0a-2228e9d52d15'),INITIAL('CLIPBOARD'),PROMPT('sz Job Name:'),HEADER('sz Job Name'),PICTURE(@s9)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hDC)
hDC                      HDC
!!> GUID('3ad50f29-92f3-4dae-9a9f-b3389dd2a1c3'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hBitmap)
hBitmap                  HBITMAP
!!> GUID('f58e90b2-5598-4053-ab46-e37d353a926c'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDIB)
[REPORTCONTROLS]
! STRING(@s20),USE(hDIB)
hDIB                     HDIB
!!> GUID('81e84a55-0ad8-477d-bc46-465839c6e836'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(clientRect)
[REPORTCONTROLS]
! STRING(@s20),USE(clientRect)
clientRect               LIKE(RECT)
!!> GUID('881f6546-8e8d-4817-9e60-daab2209c96b'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMetaFile)
[REPORTCONTROLS]
! STRING(@s20),USE(hMetaFile)
hMetaFile                HENHMETAFILE
!!> GUID('6b919cb6-0e8f-4776-812c-89354aac92ee'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(emh)
[REPORTCONTROLS]
! STRING(@s20),USE(emh)
emh                      LIKE(ENHMETAHEADER)
!!> GUID('f084762f-4b40-47a0-8516-1b446118b4a7'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMemDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hMemDC)
hMemDC                   HDC
!!> GUID('80056733-12cb-4526-95cb-a92cbc8c9a1d'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hOldBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hOldBitmap)
hOldBitmap               HBITMAP
!!> GUID('79c933d8-5f11-4972-9bd4-f355c37e96f2'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s7),USE(szDriver)
[REPORTCONTROLS]
! STRING(@s7),USE(szDriver)
szDriver                 CSTRING(8)
!!> GUID('45bfb68a-838a-4686-833c-6dc3306f1bb2'),INITIAL('DISPLAY'),PICTURE(@s7)
[SCREENCONTROLS]
! PROMPT('w Return Value:'),USE(?wReturnValue:Prompt)
! ENTRY(@n6),USE(wReturnValue)
[REPORTCONTROLS]
! STRING(@n6),USE(wReturnValue)
wReturnValue             USHORT
!!> GUID('cc5e113f-be6d-4cd9-90cf-6d4a124017a5'),PROMPT('w Return Value:'),HEADER('w Return Value'),PICTURE(@n6)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hGMem)
[REPORTCONTROLS]
! STRING(@s20),USE(hGMem)
hGMem                    HGLOBAL
!!> GUID('f2e3e6a8-7839-420b-a8d8-5dae8f023d9a'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(pMFP)
[REPORTCONTROLS]
! STRING(@n13),USE(pMFP)
pMFP                     ULONG
!!> GUID('9a585249-89de-4b84-a4a2-b8308e53fdcd'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(mfp)
[REPORTCONTROLS]
! STRING(@s20),USE(mfp)
mfp                      LIKE(METAFILEPICT)
!!> GUID('6ea75139-f8a5-4839-b4cd-25a2c2139d09'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(xScale)
[REPORTCONTROLS]
! STRING(@n13),USE(xScale)
xScale                   ULONG
!!> GUID('b9d6a21c-61b5-4277-8e67-3a4269e9e146'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(yScale)
[REPORTCONTROLS]
! STRING(@n13),USE(yScale)
yScale                   ULONG
!!> GUID('61db12ba-b018-4cc9-9ce3-ad732220d19e'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(iScale)
[REPORTCONTROLS]
! STRING(@n13),USE(iScale)
iScale                   ULONG
!!> GUID('9db644f0-5131-48a3-8f3a-623a037011b7'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(pt)
[REPORTCONTROLS]
! STRING(@s20),USE(pt)
pt                       LIKE(POINT)
!!> GUID('c7b1c9e1-807e-470d-bde3-f3c6e34cac6c'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(uBufSize)
[REPORTCONTROLS]
! STRING(@n13),USE(uBufSize)
uBufSize                 ULONG
!!> GUID('3371a4e7-db20-4aa9-b663-3a0712595cc9'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(lpMeta)
[REPORTCONTROLS]
! STRING(@n13),USE(lpMeta)
lpMeta                   ULONG
!!> GUID('1d13304b-ce25-4f48-a9f2-0c97eb7bf6af'),PICTURE(@n13)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  ELSE
     wReturnValue = FALSE
  END

!  IF IsClipboardFormatAvailable(CF_DIB)
!     OpenClipboard(param_hWindow)
!     hDIB = GetClipboardData(CF_DIB)
!     wReturnValue = SaveDIB(hDIB,param_szFileName)
!     CloseClipboard()

!  ELSIF IsClipboardFormatAvailable(CF_BITMAP)
  IF IsClipboardFormatAvailable(CF_BITMAP)
     OpenClipboard(param_hWindow)
     hBitmap = GetClipboardData(CF_BITMAP)
     hDIB = BitmapToDIB(hBitmap,0)
     IF param_Compress
        wReturnValue = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        wReturnValue = SaveDIB(hDIB,param_szFileName)
     END
     CloseClipboard()
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_ENHMETAFILE)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hMetafile = GetClipboardData(CF_ENHMETAFILE)
     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     CloseClipboard()

     ! convert bitmap to DIB
     ! and save to passed file
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())
     IF param_Compress
        wReturnValue = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        wReturnValue = SaveDIB(hDIB,param_szFileName)
     END

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_METAFILEPICT)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hGMem = GetClipboardData(CF_METAFILEPICT)
     pMFP = GlobalLock(hGMem)
     memcpy(ADDRESS(mfp),pMFP,SIZE(mfp))                         !Copy to local

     ! convert to enhanced metafile
     uBufSize = GetMetaFileBitsEx(mfp.hMF,0,0)
     lpMeta = GlobalAlloc(GPTR,uBufSize)
     GetMetaFileBitsEx(mfp.hMF,uBufSize,lpMeta)
     hMetaFile = SetWinMetaFileBits(uBufSize,lpMeta,hMemDC,pMFP)

     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     GlobalUnlock(hGMem)
     GlobalFree(lpMeta)
     CloseClipboard()

     ! convert bitmap to DIB
     ! and save to passed file
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())
     IF param_Compress
        wReturnValue = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        wReturnValue = SaveDIB(hDIB,param_szFileName)
     END

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)
     DeleteEnhMetaFile(hMetaFile)

  ELSE
     wReturnValue = ERR_FORMATNOTAVAILABLE
  END

  RETURN(wReturnValue)
[END]
[END]
[END]
