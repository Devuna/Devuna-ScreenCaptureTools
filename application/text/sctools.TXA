[APPLICATION]
VERSION 34
TODO ABC ToDo
PROCEDURE SCT_Init
[COMMON]
FROM ABC
MODIFIED '2005/10/13' ' 8:34:49'
[PROMPTS]
%ClassItem UNIQUE DEFAULT  ('ErrorManager', 'ErrorStatusManager', 'FileManager:', |
  'FuzzyMatcher', 'INIManager', 'RelationManager:', 'Translator')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('ErrorClass')
WHEN  ('ErrorStatusManager') ('ErrorStatusClass')
WHEN  ('FuzzyMatcher') ('FuzzyClass')
WHEN  ('INIManager') ('INIClass')
WHEN  ('Translator') ('TranslatorClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('')
WHEN  ('ErrorStatusManager') ('')
WHEN  ('FuzzyMatcher') ('')
WHEN  ('INIManager') ('')
WHEN  ('Translator') ('')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 0

%ProgramAuthor DEFAULT  ('')
%Repository DEFAULT  ('')
%ProgramIcon DEFAULT  ('')
%MessageDescription LONG  (1)
%GlobalExternal LONG  (0)
%ExternalSource DEFAULT  ('Dynamic Link Library (DLL)')
%GenerateEmbedComments LONG  (0)
%INIType DEFAULT  ('NVD_INI')
%INIFile DEFAULT  ('Program Name.INI')
%ININame DEFAULT  ('')
%INIProgramIniLocation DEFAULT  ('APPDIR')
%INICSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%CSIDLCompanyDir DEFAULT  ('')
%CSIDLProductDir DEFAULT  ('')
%CSIDLCreate LONG  (0)
%INIInAppDirectory LONG  (1)
%REGRoot DEFAULT  ('REG_CLASSES_ROOT')
%DisableINISaveWindow LONG  (0)
%PreserveVars MULTI LONG  ()
%PreserveVar DEPEND %PreserveVars DEFAULT TIMES 0

%EnableRunTimeTranslator LONG  (0)
%FuzzyMatchingEnabled LONG  (0)
%IgnoreCase LONG  (1)
%WordOnly LONG  (0)
%ButtonMarginsCompatibility LONG  (0)
%UseDefaultXPManifest LONG  (1)
%GenerateXPManifest LONG  (0)
%LinkGenerateXPManifest LONG  (0)
%AddVistaXPManifest LONG  (0)
%VistaManifestExecutionLevel DEFAULT  ('asInvoker')
%VistaManifestUIAccess LONG  (0)
%NoThemedControlsDependency LONG  (0)
%VistaManifestdpiAware LONG  (1)
%VistaManifestDependentAssembly MULTI LONG  ()
%VistaManifestDependentAssemblyName DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyVersion DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyType DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyPublicKeyToken DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyLanguage DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyProcessorArchitecture DEPEND %VistaManifestDependentAssembly LONG TIMES 0

%W7ManifestVista LONG  (0)
%W7ManifestW7 LONG  (0)
%W7ManifestW8 LONG  (1)
%W7ManifestW81 LONG  (1)
%W7ManifestW10 LONG  (1)
%ForceMakeTransparentXPManifest LONG  (0)
%ForceMakeColorXPManifest LONG  (0)
%ForceSHEETNoTheme LONG  (0)
%ExtUIXPMenuEnableGlobal LONG  (0)
%ExtUIXPMenuColorTypeGlobal DEFAULT  ('AUTONOBAR')
%ExtUIXPMenuDisableImageBar LONG  (1)
%ExtUIXPMenuEnableRuntime LONG  (0)
%ExtUIXPMenuRuntimeVar DEFAULT  ('SCT_wclass')
%ExtUIXPMenuColorLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorRightGlobal LONG  (12560039)
%ExtUIXPMenuColorSelectionBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectionBarRightGlobal LONG  (15920364)
%ExtUIXPMenuSelVertical LONG  (1)
%ExtUIXPMenuColorSelectionBorderGlobal LONG  (15920364)
%ExtUIXPMenuColorHotLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorHotRightGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedRightGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarRightGlobal LONG  (15920364)
%ExtUIXPMenuColorItemBackgroundGlobal LONG  (-2147483644)
%ExtUIXPMenuColorNormalText LONG  (0)
%ExtUIXPMenuColorSelectedText LONG  (0)
%ExtUIXPMenuColorHotText LONG  (0)
%ExtUIXPMenuFlat LONG  (1)
%ExtUIXPMenuShowImageBar LONG  (0)
%ExtUIXPMenuSeparator3D LONG  (1)
%ExtUIXPMenuSeparatorFull LONG  (0)
%ExtUIXPMenuVerticalLine LONG  (1)
%ExtUIMDITabGlobal DEFAULT  ('DISABLE')
%ExtUIMDITabStyleGlobal DEFAULT  ('Default')
%ExtUITabStyleGlobal DEFAULT  ('Default')
%WindowEnableEnhanceFocus LONG  (0)
%SelectedText LONG  (1)
%SelectedRadio LONG  (1)
%SelectedSpin LONG  (1)
%SelectedCheck LONG  (1)
%SelectedDropList LONG  (1)
%SelectedList LONG  (1)
%SelectedDisplayChangeColor LONG  (1)
%SelectedColor LONG  (65535)
%SelectedStyle LONG  (1)
%SelectedRequired LONG  (0)
%SelectedRequiredColor LONG  (65535)
%SelectedDisplayBox LONG  (1)
%SelectedDisplayBoxFillColor LONG  (65535)
%SelectedDisplayBoxBorderColor LONG  (0)
%SelectedDisplayBoxBorderSize DEFAULT  ('2')
%SelectedRequiredBox LONG  (0)
%SelectedRequiredDisplayBoxFillColor LONG  (255)
%SelectedRequiredDisplayBoxBorderColor LONG  (0)
%SelectedCaret LONG  (1)
%SelectedCaretColor LONG  (8421504)
%SelectedCaretCharacter DEFAULT  ('»')
%SelectedCaretCharacterSeparation DEFAULT  ('8')
%ExcludeSelectedDropList LONG  (1)
%EnableOSK DEFAULT  ('OFF')
%GlobalUseEnterInsteadTab LONG  (0)
%GlobalUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalUseEnterInsteadTabEnable DEFAULT  ('Enable')
%GlobalUseEnterInsteadTabEnableValue DEFAULT  ('True')
%GlobalInterLine DEFAULT  ('0')
%GlobalEnableAutoSizeColumn LONG  (0)
%GlobalEnableListFormatManager LONG  (0)
%GlobalUserFieldListFormatManager DEFAULT  ('1')
%TableOrigin DEFAULT  ('Application')
%FileEquate DEFAULT  ('LFM_CFile')
%ConfigFilePRE DEFAULT  ('CFG')
%ConfigFileOEM LONG  (0)
%ConfigFileTHREAD LONG  (1)
%ConfigFileENCRYPT LONG  (0)
%ConfigFilePASSWORD DEFAULT  ('')
%FormatNameSize DEFAULT  ('30')
%FormatBufferSize DEFAULT  ('5120')
%VariableBufferSize DEFAULT  ('2048')
%ConfigFilePath DEFAULT  ('')
%UseConfigFileName DEFAULT  ('Default')
%ConfigFileNAME DEFAULT  ('Formats.FDB')
%ColonCounter DEFAULT  ('')
%WrongSymbol DEFAULT  ('')
%DictionaryTableOrigin FILE  ()
%GlobalLFMSortOrderMenuText DEFAULT  ('SortOrder')
%GlobalEnableRebase LONG  (0)
%RBDMethod DEFAULT  ('Specify manually')
%RBDImageBase DEFAULT  ('10000000')
%DefaultGenerate LONG  (0)
%DefaultRILogout LONG  (1)
%LockRecoverTime DEFAULT  ('10')
%DefaultThreaded DEFAULT  ('Use File Setting')
%DefaultCreate DEFAULT  ('Use File Setting')
%DefaultExternal DEFAULT  ('None External')
%DefaultLocalExternal LONG  (0)
%DefaultExternalSource DEFAULT  ('')
%DefaultExternalAPP LONG  (0)
%DefaultExport LONG  (0)
%DefaultOpenMode DEFAULT  ('Share')
%DefaultUserAccess DEFAULT  ('Read/Write')
%DefaultOtherAccess DEFAULT  ('Deny None')
%DefaultLazyOpen LONG  (1)
%GeneratePropDataPath LONG  (0)
%PropDataPathLocation DEFAULT  ('Use same CSIDL value as set for INI file')
%DataPathCSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%DataPathCSIDLCompanyDir DEFAULT  ('')
%DataPathCSIDLProductDir DEFAULT  ('')
%DataPathCSIDLCreate LONG  (0)
%DataPathOtherDirectory DEFAULT  ('')
%DataPathOtherDirectoryCreate LONG  (0)
%OverrideGenerate DEPEND %File LONG TIMES 0

%OverrideRILogout DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%GlobalObject DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('YES')
WHEN  ('ErrorStatusManager') ('YES')
WHEN  ('FuzzyMatcher') ('YES')
WHEN  ('INIManager') ('YES')
WHEN  ('Translator') ('YES')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('GlobalErrors')
WHEN  ('ErrorStatusManager') ('GlobalErrorsStatus')
WHEN  ('FuzzyMatcher') ('FuzzyMatcher')
WHEN  ('INIManager') ('INIMgr')
WHEN  ('Translator') ('Translator')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 5
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('Translator') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 5
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('Translator') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('AsciiFileClass')
WHEN  ('ErrorStatusManager') ('ADOBlob')
WHEN  ('FuzzyMatcher') ('AsciiFileClass')
WHEN  ('INIManager') ('AsciiFileClass')
WHEN  ('Translator') ('AsciiFileClass')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 5
WHEN  ('ErrorManager') (0)
WHEN  ('ErrorStatusManager') (0)
WHEN  ('FuzzyMatcher') (0)
WHEN  ('INIManager') (0)
WHEN  ('Translator') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 2
WHEN  ('FuzzyMatcher')TIMES 0
WHEN  ('INIManager')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 2
WHEN  ('FuzzyMatcher')TIMES 0
WHEN  ('INIManager')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%OverrideThreaded DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideCreate DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideExternal DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideLocalExternal DEPEND %File LONG TIMES 0

%OverrideExternalSource DEPEND %File DEFAULT TIMES 0

%OverrideExternalAPP DEPEND %File LONG TIMES 0

%OverrideExport DEPEND %File LONG TIMES 0

%FileDeclarationMode DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use User Options')

%FileDeclarationType DEPEND %File LONG TIMES 1
WHEN  ('') (0)

%FileDeclarationThread DEPEND %File LONG TIMES 1
WHEN  ('') (0)

%FileDeclarationBindable DEPEND %File LONG TIMES 1
WHEN  ('') (1)

%FileDeclarationName DEPEND %File DEFAULT TIMES 0

%FileDeclarationOver DEPEND %File DEFAULT TIMES 0

%OverrideOpenMode DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideUserAccess DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideOtherAccess DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideLazyOpen DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideDoNotAssertOnCloseMisuse DEPEND %File LONG TIMES 1
WHEN  ('') (0)

%StandardExternalModule DEPEND %Module LONG TIMES 12
WHEN  ('') (1)
WHEN  ('sctools.clw') (1)
WHEN  ('sctools001.clw') (1)
WHEN  ('sctools002.clw') (1)
WHEN  ('sctools003.clw') (1)
WHEN  ('sctools004.clw') (1)
WHEN  ('sctools005.clw') (1)
WHEN  ('sctools006.clw') (1)
WHEN  ('sctools007.clw') (1)
WHEN  ('sctools008.clw') (1)
WHEN  ('sctools009.clw') (1)
WHEN  ('sctools010.clw') (1)

%NoGenerateGlobals LONG  (0)
%WindowManagerType DEFAULT  ('WindowManager')
%ResetOnGainFocus LONG  (0)
%AutoToolbar LONG  (1)
%AutoRefresh LONG  (1)
%ImageClass DEFAULT  ('ImageManager')
%ErrorStatusManagerType DEFAULT  ('ErrorStatusClass')
%ErrorManagerType DEFAULT  ('ErrorClass')
%DefaultErrorCategory DEFAULT  ('ABC')
%AllowSelectCopy LONG  (0)
%StoreErrorHistory LONG  (0)
%LimitStoredHistory LONG  (0)
%ErrorHistoryThreshold DEFAULT  ('300')
%HistoryViewTrigger DEFAULT  ('Level:Fatal')
%PopupClass DEFAULT  ('PopupClass')
%SelectFileClass DEFAULT  ('SelectFileClass')
%ResizerType DEFAULT  ('WindowResizeClass')
%ResizerDeFaultFindParents LONG  (1)
%ResizerDefaultOptimizeMoves LONG  (1)
%ResizerDefaultOptimizeRedraws LONG  (1)
%INIClass DEFAULT  ('INIClass')
%RunTimeTranslatorType DEFAULT  ('TranslatorClass')
%ExtractionFilename DEFAULT  ('')
%TranslationGroups MULTI LONG  ()
%TranslationFile DEPEND %TranslationGroups DEFAULT TIMES 0

%TranslationGroup DEPEND %TranslationGroups DEFAULT TIMES 0

%CalendarManagerType DEFAULT  ('CalendarClass')
%GlobalChangeColor LONG  (0)
%GlobalColorSunday LONG  (255)
%GlobalColorSaturday LONG  (255)
%GlobalColorHoliday LONG  (32768)
%GlobalColorOther LONG  (0)
%GlobalSelectOnClose DEFAULT  ('Select')
%GlobalUseABCClasess LONG  (1)
%FileManagerType DEFAULT  ('FileManager')
%ViewManagerType DEFAULT  ('ViewManager')
%RelationManagerType DEFAULT  ('RelationManager')
%BrowserType DEFAULT  ('BrowseClass')
%ActiveInvisible LONG  (0)
%AllowUnfilled LONG  (0)
%RetainRow LONG  (1)
%FileDropManagerType DEFAULT  ('FileDropClass')
%FileDropComboManagerType DEFAULT  ('FileDropComboClass')
%FormVCRManagerType DEFAULT  ('FormVCRClass')
%BrowseEIPManagerType DEFAULT  ('BrowseEIPManager')
%EditInPlaceInterface DEFAULT  ('Original')
%EditInPlaceType DEFAULT  ('EditEntryClass')
%EditInPlaceEntryType DEFAULT  ('EditEntryClass')
%EditInPlaceTextType DEFAULT  ('EditTextClass')
%EditInPlaceCheckType DEFAULT  ('EditCheckClass')
%EditInPlaceSpinType DEFAULT  ('EditSpinClass')
%EditInPlaceDropListType DEFAULT  ('EditDropListClass')
%EditInPlaceDropComboType DEFAULT  ('EditDropComboClass')
%EditInPlaceColorType DEFAULT  ('EditColorClass')
%EditInPlaceFileType DEFAULT  ('EditFileClass')
%EditInPlaceFontType DEFAULT  ('EditFontClass')
%EditInPlaceMultiSelectType DEFAULT  ('EditMultiSelectClass')
%EditInPlaceCalendarType DEFAULT  ('EditCalendarClass')
%EditInPlaceLookupType DEFAULT  ('EditLookupClass')
%EditInPlaceOtherType DEFAULT  ('EditEntryClass')
%QBEFormType DEFAULT  ('QueryFormClass')
%QBEFormVisualType DEFAULT  ('QueryFormVisual')
%QBEListType DEFAULT  ('QueryListClass')
%QBEListVisualType DEFAULT  ('QueryListVisual')
%StepManagerType DEFAULT  ('StepClass')
%StepManagerLongType DEFAULT  ('StepLongClass')
%StepManagerRealType DEFAULT  ('StepRealClass')
%StepManagerStringType DEFAULT  ('StepStringClass')
%StepManagerCustomType DEFAULT  ('StepCustomClass')
%StepLocatorType DEFAULT  ('StepLocatorClass')
%EntryLocatorType DEFAULT  ('EntryLocatorClass')
%IncrementalLocatorType DEFAULT  ('IncrementalLocatorClass')
%FilteredLocatorType DEFAULT  ('FilterLocatorClass')
%FuzzyMatcherClass DEFAULT  ('FuzzyClass')
%GridClass DEFAULT  ('GridClass')
%SidebarClass DEFAULT  ('SidebarClass')
%ProcessType DEFAULT  ('ProcessClass')
%PrintPreviewType DEFAULT  ('PrintPreviewClass')
%ReportManagerType DEFAULT  ('ReportManager')
%ReportTargetSelectorManagerType DEFAULT  ('ReportTargetSelectorClass')
%BreakManagerType DEFAULT  ('BreakManagerClass')
%AsciiViewerClass DEFAULT  ('AsciiViewerClass')
%AsciiSearchClass DEFAULT  ('AsciiSearchClass')
%AsciiPrintClass DEFAULT  ('AsciiPrintClass')
%AsciiFileManagerType DEFAULT  ('AsciiFileClass')
%ToolbarClass DEFAULT  ('ToolbarClass')
%ToolbarListBoxType DEFAULT  ('ToolbarListboxClass')
%ToolbarRelTreeType DEFAULT  ('ToolbarReltreeClass')
%ToolbarUpdateClassType DEFAULT  ('ToolbarUpdateClass')
%ToolbarFormVCRType DEFAULT  ('ToolbarFormVCRClass')
%OverrideAbcSettings LONG  (0)
%AbcSourceLocation DEFAULT  ('LINK')
%AbcLibraryName DEFAULT  ('')
%AppTemplateFamily DEFAULT  ('ABC')
%CWTemplateVersion DEFAULT  ('v10.0')
%ABCVersion DEFAULT  ('10000')
%INIActive LONG  (0)
%WindowFrameDragging LONG  (1)
%GlobalUseDefaultFileManager LONG  (1)
%GlobalFileManagerClass DEFAULT  ('')
%GlobalUseDefaultRelationManager LONG  (1)
%GlobalRelationManagerClass DEFAULT  ('')
%OverrideUseDefaultFileManager DEPEND %File LONG TIMES 0

%OverrideFileManagerClass DEPEND %File DEFAULT TIMES 0

%OverrideUseDefaultRelationManager DEPEND %File LONG TIMES 0

%OverrideRelationManagerClass DEPEND %File DEFAULT TIMES 0

%EnableExceptionMessage LONG  (0)
[ADDITION]
NAME KCR KCR_Win32
[INSTANCE]
INSTANCE 1
[PROMPTS]
%TplName DEFAULT  ('KCR_Win32 (Devuna)')
%TplDescription DEFAULT  ('Add Win32 and C Library prototypes and equates')
%IncludeEquates LONG  (1)
%IncludeMap LONG  (1)
[ADDITION]
NAME KCR KCR_GlobalClass
[INSTANCE]
INSTANCE 3
[PROMPTS]
%TplName DEFAULT  ('KCR_GlobalClass (Devuna)')
%TplDescription DEFAULT  ('Exclude Classes from Global Instantiation')
%ExcludeAllClasses LONG  (1)
%ExcludeAll LONG  (0)
%IncludeCapesoft LONG  (0)
%IncludeFileManager LONG  (0)
%IncludeMessage LONG  (0)
%IncludeNetTalk LONG  (0)
%IncludeKeystone LONG  (0)
%IncludeEdit LONG  (0)
%IncludeImageEx LONG  (0)
%IncludeScintilla LONG  (0)
%IncludeTablet LONG  (0)
%IncludeUXTheme LONG  (0)
%IncludeCOM LONG  (0)
%IncludeRADProfiler LONG  (0)
%IncludeMiscellaneous LONG  (0)
%IncludeProDomus LONG  (0)
%ExcludeClass MULTI DEFAULT  ()
%ListClasses LONG  (0)
[ADDITION]
NAME KCR KCR_GlobalDataExport
[INSTANCE]
INSTANCE 2
[PROMPTS]
%TplName DEFAULT  ('KCR_GlobalDataExport (Devuna)')
%TplDescription DEFAULT  ('Remove template globals and ABC libraries from EXP file')
%ExcludeExportedGlobalData LONG  (0)
[PERSIST]
%SaveCreateLocalMap DEFAULT  ('1')
%GenerationCompleted DEPEND %Module DEFAULT TIMES 11
WHEN  ('sctools.clw') ('1')
WHEN  ('sctools001.clw') ('1')
WHEN  ('sctools002.clw') ('1')
WHEN  ('sctools003.clw') ('1')
WHEN  ('sctools004.clw') ('1')
WHEN  ('sctools005.clw') ('1')
WHEN  ('sctools006.clw') ('1')
WHEN  ('sctools007.clw') ('1')
WHEN  ('sctools008.clw') ('1')
WHEN  ('sctools009.clw') ('1')
WHEN  ('sctools010.clw') ('1')

%LastTarget32 DEFAULT  ('1')
%LastProgramExtension DEFAULT  ('DLL')
%LastApplicationDebug DEFAULT  ('')
%LastApplicationLocalLibrary DEFAULT  ('')
[PROJECT]
#system win32 dll
#model clarion dll
#set RELEASE = on
#pragma define(_ABCDllMode_=>0) -- GENERATED
#pragma define(_ABCLinkMode_=>1) -- GENERATED
#compile "sctools.clw" -- GENERATED
#compile "sctools001.clw" -- GENERATED
#compile "sctools002.clw" -- GENERATED
#compile "sctools003.clw" -- GENERATED
#compile "sctools004.clw" -- GENERATED
#compile "sctools005.clw" -- GENERATED
#compile "sctools006.clw" -- GENERATED
#compile "sctools007.clw" -- GENERATED
#compile "sctools008.clw" -- GENERATED
#compile "sctools009.clw" -- GENERATED
#compile "sctools010.clw" -- GENERATED
#compile "sctools_BC0.CLW" -- GENERATED
#pragma link("C%V%asc%X%%L%.lib") -- GENERATED
#link "sctools.DLL"
[PROGRAM]
[COMMON]
FROM ABC ABC
MODIFIED '2017/02/02' '16:48:38'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(SCT_wclass)
[REPORTCONTROLS]
! STRING(@s20),USE(SCT_wclass)
SCT_wclass               LIKE(WNDCLASS)
!!> GUID('fa48d281-be82-4a42-aec4-96d63aeed1f6'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s15),USE(SCT_szClassName)
[REPORTCONTROLS]
! STRING(@s15),USE(SCT_szClassName)
SCT_szClassName          CSTRING(16)
!!> GUID('f8409f3f-3c87-4902-9a16-7b000600a2ba'),INITIAL('RubberBandClass'),PICTURE(@s15)
[SCREENCONTROLS]
! ENTRY(@s20),USE(SCT_hWndApplication)
[REPORTCONTROLS]
! STRING(@s20),USE(SCT_hWndApplication)
SCT_hWndApplication      HWND
!!> GUID('a976b74d-00cc-43ca-b62c-666bd1875fff'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('SCT h Wnd Client:'),USE(?SCT_hWndClient:Prompt)
! ENTRY(@s20),USE(SCT_hWndClient)
[REPORTCONTROLS]
! STRING(@s20),USE(SCT_hWndClient)
SCT_hWndClient           HWND
!!> GUID('e651f5c5-cfbb-40f3-869c-c35c0a4c187e'),PROMPT('SCT h Wnd Client:'),HEADER('SCT h Wnd Client'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(SCT_hInstance)
[REPORTCONTROLS]
! STRING(@s20),USE(SCT_hInstance)
SCT_hInstance            HANDLE
!!> GUID('493a2a89-6671-4099-aead-5c4c29fd388c'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('SCT b Initialized:'),USE(?SCT_bInitialized:Prompt)
! ENTRY(@n3),USE(SCT_bInitialized),MSG('True if SCT_Init has been called'),TIP('True if SCT_Init has been called')
[REPORTCONTROLS]
! STRING(@n3),USE(SCT_bInitialized)
SCT_bInitialized         BYTE !True if SCT_Init has been called
!!> GUID('9fa57983-2ea0-4dae-8cbc-fd8ad9f26d1a'),INITIAL('0'),PROMPT('SCT b Initialized:'),HEADER('SCT b Initialized'),MESSAGE('True if SCT_Init has been called'),TOOLTIP('True if SCT_Init has been called'),PICTURE(@n3)
[EMBED]
EMBED %BeforeGlobalIncludes
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3500
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
EMBED %GlobalMap
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
MODULE('DIBAPI.DLL')
  BitmapToDIB(HBITMAP hBitmap, HPALETTE hPal),HDIB,C,NAME('BitmapToDIB')
  ChangeBitmapFormat(HBITMAP hBitmap, WORD wBitCount, DWORD dwCompression, HPALETTE hPal),HDIB,C,NAME('ChangeBitmapFormat')
  ChangeDIBFormat(HDIB hDIB, WORD wBitCount, DWORD dwCompression),HDIB,C,NAME('ChangeDIBFormat')
  CopyScreenToBitmap(*RECT),HBITMAP,RAW,C,NAME('CopyScreenToBitmap')
  CopyScreenToDIB(*RECT),HDIB,RAW,C,NAME('CopyScreenToDIB')
  CopyWindowToBitmap(HWND, WORD),HBITMAP,C,NAME('CopyWindowToBitmap')
  CopyWindowToDIB(HWND, WORD),HDIB,C,NAME('CopyWindowToDIB')
  CreateDIBPalette(HDIB hDIB),HPALETTE,C,NAME('CreateDIBPalette')
  CreateDIB(DWORD, DWORD, WORD),HDIB,C,NAME('CreateDIB')
  DestroyDIB(HDIB),WORD,C,NAME('DestroyDIB')
  DIBError(UINT ErrNo),CSTRING,C,NAME('DIBError')
  DIBHeight(ULONG lpDIB),DWORD,C,NAME('DIBHeight')
  DIBNumColors(ULONG lpDIB),WORD,C,NAME('DIBNumColors')
  DIBToBitmap(HDIB hDIB, HPALETTE hPal),HBITMAP,C,NAME('DIBToBitmap')
  DIBWidth(ULONG lpDIB),DWORD,C,NAME('DIBWidth')
  FindDIBBits(ULONG lpDIB),ULONG,C,NAME('FindDIBBits')
  GetSystemPalette(),HPALETTE,C,NAME('GetSystemPalette')
  LoadDIB(ULONG),HDIB,C,NAME('LoadDIB')
  PaintBitmap(HDC, *RECT, HBITMAP, *RECT, HPALETTE),BOOL,RAW,C,NAME('PaintBitmap')
  PaintDIB(HDC, *RECT, HDIB, *RECT, HPALETTE),BOOL,RAW,C,NAME('PaintDIB')
  PalEntriesOnDevice(HDC hDC),UINT,C,NAME('PalEntriesOnDevice')
  PaletteSize(ULONG lpDIB),WORD,C,NAME('PaletteSize')
  PrintDIB(HDIB, WORD, WORD, WORD, *CSTRING),WORD,RAW,C,C,NAME('PrintDIB'),PROC
  PrintDIB2(HDIB, WORD, WORD, WORD, *CSTRING, *POINT),WORD,RAW,C,C,NAME('PrintDIB'),PROC
  PrintScreen(*RECT, WORD, WORD, WORD, ULONG),WORD,RAW,C,NAME('PrintScreen'),PROC
  PrintScreen2(*RECT, WORD, WORD, WORD, ULONG, *POINT),WORD,RAW,C,NAME('PrintScreen2'),PROC
  PrintScreen(*RECT, WORD, WORD, WORD, *CSTRING),WORD,RAW,C,NAME('PrintScreen'),PROC
  PrintScreen2(*RECT, WORD, WORD, WORD, *CSTRING, *POINT),WORD,RAW,C,NAME('PrintScreen2'),PROC
  !PrintWindow(HWND, WORD, WORD, WORD, WORD, ULONG),WORD,C,NAME('PrintWindow'),PROC
  PrintWindow2(HWND, WORD, WORD, WORD, WORD, ULONG, *POINT),WORD,C,NAME('PrintWindow2'),PROC
  !PrintWindow(HWND, WORD, WORD, WORD, WORD, *CSTRING),WORD,RAW,C,NAME('PrintWindow'),PROC
  PrintWindow2(HWND, WORD, WORD, WORD, WORD, *CSTRING, *POINT),WORD,RAW,C,NAME('PrintWindow2'),PROC
  SaveDIB(HDIB, *CSTRING),WORD,RAW,C,NAME('SaveDIB'),PROC
END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
MODULE('JPGLIB.DLL')
  EncodeJPGFileFromDIB(HDIB hDib, *CSTRING szPathName),BOOL,C,RAW,NAME('EncodeJPGFileFromDIB'),PROC
END
[END]
EMBED %AfterGlobalIncludes
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
HDIB                EQUATE(HANDLE)

! Print Options selection
PW_BESTFIT          EQUATE(1)
PW_STRETCHTOPAGE    EQUATE(2)
PW_SCALE            EQUATE(3)

! Print Area selection
PW_WINDOW           EQUATE(1)
PW_CLIENT           EQUATE(2)

!Rubber Banding Modes
PRINT_MODE          EQUATE(1)
SAVE_MODE           EQUATE(2)

! Error constants
  ITEMIZE(0),PRE()
ERR_MIN                 EQUATE         ! All error #s >= this value
ERR_NOT_DIB             EQUATE(0)      ! Tried to load a file, NOT a DIB!
ERR_MEMORY              EQUATE         ! Not enough memory!
ERR_READ                EQUATE         ! Error reading file!
ERR_LOCK                EQUATE         ! Error on a GlobalLock()!
ERR_OPEN                EQUATE         ! Error opening a file!
ERR_CREATEPAL           EQUATE         ! Error creating palette.
ERR_GETDC               EQUATE         ! Couldn't get a DC.
ERR_CREATEDDB           EQUATE         ! Error create a DDB.
ERR_STRETCHBLT          EQUATE         ! StretchBlt() returned failure.
ERR_STRETCHDIBITS       EQUATE         ! StretchDIBits() returned failure.
ERR_SETDIBITSTODEVICE   EQUATE         ! SetDIBitsToDevice() failed.
ERR_STARTDOC            EQUATE         ! Error calling StartDoc().
ERR_NOGDIMODULE         EQUATE         ! Couldn't find GDI module in memory.
ERR_SETABORTPROC        EQUATE         ! Error calling SetAbortProc().
ERR_STARTPAGE           EQUATE         ! Error calling StartPage().
ERR_NEWFRAME            EQUATE         ! Error calling NEWFRAME escape.
ERR_ENDPAGE             EQUATE         ! Error calling EndPage().
ERR_ENDDOC              EQUATE         ! Error calling EndDoc().
ERR_SETDIBITS           EQUATE         ! Error calling SetDIBits().
ERR_FILENOTFOUND        EQUATE         ! Error opening file in GetDib()
ERR_INVALIDHANDLE       EQUATE         ! Invalid Handle
ERR_DIBFUNCTION         EQUATE         ! Error on call to DIB function
ERR_MAX                 EQUATE         ! All dibapi error #s < this value
ERR_NOTINITIALIZED      EQUATE         ! SCCTOOLS library not initialized
ERR_FORMATNOTAVAILABLE  EQUATE         ! Clipboard Format not available
  END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     INCLUDE('PRNPROP.CLW'),ONCE
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_PrintWindow
PROTOTYPE '(UNSIGNED  param_hWindow, LONG param_printArea=1, LONG param_printOption=1, LONG param_wScaleX=1, LONG param_wScaleY=1,LONG param_x=0, LONG param_y=0),USHORT,PROC'
PARAMETERS '(param_hWindow, param_printArea, param_printOption, param_wScaleX, param_wScaleY, param_x, param_y)'
GLOBAL
[COMMON]
DESCRIPTION 'Print A Window'
FROM ABC Source
MODIFIED '2013/07/18' '12:42:18'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
 IF ~SCT_bInitialized
    RETURN(ERR_NOTINITIALIZED)
 END
 GetWindowText(param_hWindow,szJobName,SIZE(szJobName)-1)
 ptOrigin.x = param_x
 ptOrigin.y = param_y
 RETURN( PrintWindow2(param_hWindow,param_printArea,param_printOption,param_wScaleX,param_wScaleY,szJobName,ptOrigin) )
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
szJobName       CSTRING(65)
ptOrigin        LIKE(POINT)
szSection       CSTRING('windows')
szKeyName       CSTRING('device')
szPrinterName   CSTRING(256)
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_SaveWindow
PROTOTYPE '(UNSIGNED param_hWindow, *CSTRING param_szFilename, LONG param_printArea=1, BYTE param_Compress=0),USHORT,PROC'
PARAMETERS '(param_hWindow, param_szFilename, param_printArea, param_Compress)'
GLOBAL
[COMMON]
DESCRIPTION 'Save A Window Bitmap'
FROM ABC Source
MODIFIED '2013/07/18' '14:14:22'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  END
  hDIB = CopyWindowToDIB(param_hWindow,param_printArea)
  IF UPPER(param_szFilename) = 'CLIPBOARD'
     OpenClipboard(param_hWindow)
     EmptyClipboard()
     SetClipboardData(CF_DIB, hDIB)
     CloseClipboard()
     rVal = FALSE
  ELSE
     IF param_Compress
        rVal = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        rVal = SaveDIB(hDIB,param_szFileName)
     END
  END
  GlobalFree(hDIB)
  RETURN(rVal)
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
hDIB    HDIB
rVal    LONG
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_ClipboardToImage
PROTOTYPE '(UNSIGNED param_hWindow, LONG param_feq),USHORT,PROC'
PARAMETERS '(param_hWindow, param_feq)'
GLOBAL
[COMMON]
DESCRIPTION 'Display Clipboard Bitmap in passed feq'
FROM ABC Source
MODIFIED '2013/07/18' '12:42:28'
[DATA]
[SCREENCONTROLS]
! TEXT,USE(szPath)
[REPORTCONTROLS]
! TEXT,USE(szPath)
szPath                   CSTRING(256)
!!> GUID('a5bb3378-252e-442e-a028-19775a89b8f7'),PICTURE(@s255)
[SCREENCONTROLS]
! ENTRY(@s1),USE(szPrefix)
[REPORTCONTROLS]
! STRING(@s1),USE(szPrefix)
szPrefix                 CSTRING(2)
!!> GUID('858a0a05-2bc0-4730-93d3-16546a1dfe79'),INITIAL('$'),PICTURE(@s1)
[SCREENCONTROLS]
! TEXT,USE(szTempFile)
[REPORTCONTROLS]
! TEXT,USE(szTempFile)
szTempFile               CSTRING(257)
!!> GUID('f9e52799-9413-4880-9978-46f2da2da73c'),PICTURE(@s255)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hDC)
hDC                      HDC
!!> GUID('927a2de1-c5c6-4936-b241-2417fff5f76c'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hBitmap)
hBitmap                  HBITMAP
!!> GUID('6e42c769-829a-40fc-a8e8-566baad94897'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDIB)
[REPORTCONTROLS]
! STRING(@s20),USE(hDIB)
hDIB                     HDIB
!!> GUID('f93c7cda-7022-49b0-8b47-114d1b1ce834'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(clientRect)
[REPORTCONTROLS]
! STRING(@s20),USE(clientRect)
clientRect               LIKE(RECT)
!!> GUID('18beea8e-a16f-459c-9f6e-7e78de3bcde6'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMetaFile)
[REPORTCONTROLS]
! STRING(@s20),USE(hMetaFile)
hMetaFile                HENHMETAFILE
!!> GUID('bfffbe9b-bd67-4e2e-bfd4-198bf8c512d4'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(emh)
[REPORTCONTROLS]
! STRING(@s20),USE(emh)
emh                      LIKE(ENHMETAHEADER)
!!> GUID('9e737fe4-95a4-4a70-a025-532764976588'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMemDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hMemDC)
hMemDC                   HDC
!!> GUID('1120b490-adaa-4deb-b2eb-be18787decd0'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hOldBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hOldBitmap)
hOldBitmap               HBITMAP
!!> GUID('b3d1f0c6-4d33-4593-bd4d-cb36fcb63a4c'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s7),USE(szDriver)
[REPORTCONTROLS]
! STRING(@s7),USE(szDriver)
szDriver                 CSTRING(8)
!!> GUID('3aa3de24-0713-416e-b579-9bfb60f2c3d6'),INITIAL('DISPLAY'),PICTURE(@s7)
[SCREENCONTROLS]
! PROMPT('w Return Value:'),USE(?wReturnValue:Prompt)
! ENTRY(@n6),USE(wReturnValue)
[REPORTCONTROLS]
! STRING(@n6),USE(wReturnValue)
wReturnValue             USHORT
!!> GUID('c320b824-8bca-469b-9c59-fd5cfebde2e3'),PROMPT('w Return Value:'),HEADER('w Return Value'),PICTURE(@n6)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hGMem)
[REPORTCONTROLS]
! STRING(@s20),USE(hGMem)
hGMem                    HGLOBAL
!!> GUID('4dd12ea6-255a-4bac-998a-d00e1da33762'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(pMFP)
[REPORTCONTROLS]
! STRING(@n13),USE(pMFP)
pMFP                     ULONG
!!> GUID('f51c6937-b7cf-462e-bb1b-a2540277ba53'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(mfp)
[REPORTCONTROLS]
! STRING(@s20),USE(mfp)
mfp                      LIKE(METAFILEPICT)
!!> GUID('6a518e67-1cc7-47af-bdb7-d5124f2e30b3'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(xScale)
[REPORTCONTROLS]
! STRING(@n13),USE(xScale)
xScale                   ULONG
!!> GUID('ee07ec0b-3499-45d4-90f2-4f50194659b4'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(yScale)
[REPORTCONTROLS]
! STRING(@n13),USE(yScale)
yScale                   ULONG
!!> GUID('1c0f5477-d916-4ac6-bc53-0224d8a71fbc'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(iScale)
[REPORTCONTROLS]
! STRING(@n13),USE(iScale)
iScale                   ULONG
!!> GUID('937444b8-012b-4c40-adee-0a45e0833239'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(pt)
[REPORTCONTROLS]
! STRING(@s20),USE(pt)
pt                       LIKE(POINT)
!!> GUID('cb37d50a-57c8-4338-9c9c-4717b7ce9dc2'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(uBufSize)
[REPORTCONTROLS]
! STRING(@n13),USE(uBufSize)
uBufSize                 ULONG
!!> GUID('ed3f66b3-edfa-407b-aa2a-57eddb66b06c'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(lpMeta)
[REPORTCONTROLS]
! STRING(@n13),USE(lpMeta)
lpMeta                   ULONG
!!> GUID('04ae8ed2-e85c-4fa2-abcb-efad24a593ca'),PICTURE(@n13)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  ELSE
     wReturnValue = FALSE
  END

!  IF IsClipboardFormatAvailable(CF_DIB)
!     OpenClipboard(param_hWindow)
!     hDIB = GetClipboardData(CF_DIB)
!     SaveDIB(hDIB,szTempFile)
!     CloseClipboard()
!     param_feq{PROP:Text} = szTempFile

!  ELSIF IsClipboardFormatAvailable(CF_BITMAP)
  IF IsClipboardFormatAvailable(CF_BITMAP)
     OpenClipboard(param_hWindow)
     hBitmap = GetClipboardData(CF_BITMAP)
     hDIB = BitmapToDIB(hBitmap,0)

     DO UpdateImage

     GlobalFree(hDIB)
     CloseClipboard()

  ELSIF IsClipboardFormatAvailable(CF_ENHMETAFILE)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hMetafile = GetClipboardData(CF_ENHMETAFILE)
     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     CloseClipboard()

     ! convert bitmap to DIB
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())

     DO UpdateImage

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_METAFILEPICT)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hGMem = GetClipboardData(CF_METAFILEPICT)
     pMFP = GlobalLock(hGMem)
     memcpy(ADDRESS(mfp),pMFP,SIZE(mfp))                         !Copy to local

     ! convert to enhanced metafile
     uBufSize = GetMetaFileBitsEx(mfp.hMF,0,0)
     lpMeta = GlobalAlloc(GPTR,uBufSize)
     GetMetaFileBitsEx(mfp.hMF,uBufSize,lpMeta)
     hMetaFile = SetWinMetaFileBits(uBufSize,lpMeta,hMemDC,pMFP)

     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     GlobalUnlock(hGMem)
     GlobalFree(lpMeta)
     CloseClipboard()

     ! convert bitmap to DIB
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())

     DO UpdateImage

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)
     DeleteEnhMetaFile(hMetaFile)

  ELSE
     wReturnValue = ERR_FORMATNOTAVAILABLE
  END

  RETURN(wReturnValue)
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3500
PROPERTY:END
UpdateImage ROUTINE
  lpBI = GlobalLock(hDIB)
  bi &= (lpBI)

  ! Compute the size
  bmfHdr.bfType = DIB_HEADER_MARKER
  dwDIBSize = bi.biSize + PaletteSize(lpBI) + bi.biSizeImage

  ! Calculate the file size by adding the DIB size to sizeof(BITMAPFILEHEADER)
  bmfHdr.bfSize = dwDIBSize + size(BITMAPFILEHEADER)
  bmfHdr.bfReserved1 = 0
  bmfHdr.bfReserved2 = 0

  !*
  !* Now, calculate the offset the actual bitmap bits will be in
  !* the file -- It's the Bitmap file header plus the DIB header,
  !* plus the size of the color table.
  !*
  bmfHdr.bfOffBits = size(BITMAPFILEHEADER) + bi.biSize + PaletteSize(lpBI)

  hMem = GlobalAlloc(GHND,bmfHdr.bfSize)
  pMem = GlobalLock(hMem)
  memcpy(pMem,address(bmfHdr),size(BITMAPFILEHEADER))
  memcpy(pMem+size(BITMAPFILEHEADER),lpBI,dwDIBSize)

  param_feq{prop:imageblob} = pMem
  globalfree(pMem)
  globalfree(lpbi)

  EXIT
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3500
PROPERTY:END
DIB_HEADER_MARKER    EQUATE(04D42h)  !'BM'
lpBI            LONG    !pointer to bitmapheaderinfo
bi              &BITMAPINFOHEADER
bmfHdr          LIKE(BITMAPFILEHEADER)
dwDIBSize       DWORD
dwBmBitsSize    DWORD
hMem            HGLOBAL
pMem            LONG
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_Init
PROTOTYPE '(UNSIGNED param_hWndApplication, UNSIGNED param_hWndClient, UNSIGNED param_hInstance)'
PARAMETERS '(param_hWndApplication, param_hWndClient, param_hInstance)'
GLOBAL
[COMMON]
DESCRIPTION 'Library Initialization'
FROM ABC Source
MODIFIED '2013/07/18' '12:42:32'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  SCT_hWndApplication = param_hWndApplication
  SCT_hWndClient = param_hWndClient
  SCT_hInstance = param_hInstance

  ! Create our rubber band class
  SCT_wclass.style = CS_HREDRAW + CS_VREDRAW
  SCT_wclass.lpfnWndProc = ADDRESS(RubberBandWndProc)
  SCT_wclass.cbClsExtra = 0
  SCT_wclass.cbWndExtra = 0
  SCT_wclass.hInst = SCT_hInstance
  SCT_wclass.hIcon = 0
  SCT_wclass.hCursor = LoadCursor(0, IDC_CROSS)
  SCT_wclass.hbrBackground = GetStockObject(NULL_BRUSH)
  SCT_wclass.lpszMenuName = 0
  SCT_wclass.lpszClassName = ADDRESS(SCT_szClassName)

  RegisterClass(SCT_wclass)
  SCT_bInitialized = TRUE
  RETURN
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_Error
PROTOTYPE '(USHORT param_wResult)'
PARAMETERS '(param_wResult)'
[COMMON]
FROM ABC Source
MODIFIED '2013/07/18' '12:42:36'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF param_wResult < ERR_MAX
     MESSAGE(DIBError(param_wResult),'SCT_Error',ICON:HAND)
  ELSE
     CASE param_wResult
     OF ERR_NOTINITIALIZED
        MESSAGE('Library Not Initialized!','SCT_Error',ICON:HAND)
     OF ERR_FORMATNOTAVAILABLE
        MESSAGE('Clipboard does not contain a supported format.','SCT_Error',ICON:HAND)
     ELSE
        MESSAGE(DIBError(param_wResult),'SCT_Error',ICON:HAND)
     END
  END
  RETURN
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_GetAppWindow
PROTOTYPE '(),UNSIGNED'
[COMMON]
DESCRIPTION 'Returns the Application Window Handle'
FROM ABC Source
MODIFIED '2013/07/18' '12:42:41'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  RETURN(SCT_hWndApplication)
[END]
[END]
[END]
[MODULE]
[COMMON]
DESCRIPTION 'Generated Source Module'
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_GetAppClientWindow
PROTOTYPE '(),UNSIGNED'
[COMMON]
DESCRIPTION 'Return Application Client Window Handle'
FROM ABC Source
MODIFIED '2013/07/18' '12:42:48'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  RETURN(SCT_hWndClient)
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_PrintClipboard
PROTOTYPE '(UNSIGNED  param_hWindow, LONG param_printOption=1, LONG param_wScaleX=1, LONG param_wScaleY=1,LONG param_x=0,LONG param_y=0),USHORT,PROC'
PARAMETERS '(param_hWindow, param_printOption, param_wScaleX, param_wScaleY, param_x, param_y)'
GLOBAL
[COMMON]
DESCRIPTION 'Print Clipboard Bitmap'
FROM ABC Source
MODIFIED '2013/07/18' '12:42:54'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s9),USE(szJobName)
[REPORTCONTROLS]
! STRING(@s9),USE(szJobName)
szJobName                CSTRING(10)
!!> GUID('f63db48a-7315-420c-8b90-b68e533706e8'),INITIAL('CLIPBOARD'),PROMPT('sz Job Name:'),HEADER('sz Job Name'),PICTURE(@s9)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hDC)
hDC                      HDC
!!> GUID('5272da45-0d4e-4a6a-b88f-4f6dbfbe3db7'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hBitmap)
hBitmap                  HBITMAP
!!> GUID('be30def4-2a7f-4dcd-b0c4-3548578c85a0'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDIB)
[REPORTCONTROLS]
! STRING(@s20),USE(hDIB)
hDIB                     HDIB
!!> GUID('da91a92f-ae8d-44a5-93c5-3b1ced0ac1db'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(clientRect)
[REPORTCONTROLS]
! STRING(@s20),USE(clientRect)
clientRect               LIKE(RECT)
!!> GUID('62c7f6ca-3f70-4b74-b340-37eeb8abe4c5'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMetaFile)
[REPORTCONTROLS]
! STRING(@s20),USE(hMetaFile)
hMetaFile                HENHMETAFILE
!!> GUID('70aa1701-d00d-4d7e-bf0f-5f63d7edffe5'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(emh)
[REPORTCONTROLS]
! STRING(@s20),USE(emh)
emh                      LIKE(ENHMETAHEADER)
!!> GUID('d30665b8-de09-4b86-a7bb-f693de287cee'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMemDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hMemDC)
hMemDC                   HDC
!!> GUID('ef261487-d2b9-4711-af5e-1a98c75d37a4'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hOldBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hOldBitmap)
hOldBitmap               HBITMAP
!!> GUID('170b253e-a29f-400c-bc2a-df01f17e1c32'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s7),USE(szDriver)
[REPORTCONTROLS]
! STRING(@s7),USE(szDriver)
szDriver                 CSTRING(8)
!!> GUID('c26d6382-2624-422a-9b22-08a97436fcda'),INITIAL('DISPLAY'),PICTURE(@s7)
[SCREENCONTROLS]
! PROMPT('w Return Value:'),USE(?wReturnValue:Prompt)
! ENTRY(@n6),USE(wReturnValue)
[REPORTCONTROLS]
! STRING(@n6),USE(wReturnValue)
wReturnValue             USHORT
!!> GUID('1942de74-1313-44a9-afc4-54e7e2fe699a'),PROMPT('w Return Value:'),HEADER('w Return Value'),PICTURE(@n6)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hGMem)
[REPORTCONTROLS]
! STRING(@s20),USE(hGMem)
hGMem                    HGLOBAL
!!> GUID('cf95f3e3-a492-4022-96e5-46947bc2de15'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(pMFP)
[REPORTCONTROLS]
! STRING(@n13),USE(pMFP)
pMFP                     ULONG
!!> GUID('a941c580-96fa-4638-943a-d7bd50e225c4'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(mfp)
[REPORTCONTROLS]
! STRING(@s20),USE(mfp)
mfp                      LIKE(METAFILEPICT)
!!> GUID('c2b721fb-5899-495a-8860-a50d93cf397d'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(xScale)
[REPORTCONTROLS]
! STRING(@n13),USE(xScale)
xScale                   ULONG
!!> GUID('e9327f67-a19e-4b48-b061-caeab6a9c28c'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(yScale)
[REPORTCONTROLS]
! STRING(@n13),USE(yScale)
yScale                   ULONG
!!> GUID('12b7d6ee-d38f-48b1-a189-c8ea92174814'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(iScale)
[REPORTCONTROLS]
! STRING(@n13),USE(iScale)
iScale                   ULONG
!!> GUID('0bfb34c4-0871-4013-9f3b-c6eefdc55b3e'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(pt)
[REPORTCONTROLS]
! STRING(@s20),USE(pt)
pt                       LIKE(POINT)
!!> GUID('75d42a06-c5f6-49be-9361-e250881ab449'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(uBufSize)
[REPORTCONTROLS]
! STRING(@n13),USE(uBufSize)
uBufSize                 ULONG
!!> GUID('40ac5c28-0ebb-4883-bde4-31bccbc2bc16'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(lpMeta)
[REPORTCONTROLS]
! STRING(@n13),USE(lpMeta)
lpMeta                   ULONG
!!> GUID('94756d61-88bd-4474-b614-4dc4d286cbe3'),PICTURE(@n13)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  ELSE
     wReturnValue = FALSE
  END

  ptOrigin.x = param_x
  ptOrigin.y = param_y

!  IF IsClipboardFormatAvailable(CF_DIB)
!     OpenClipboard(param_hWindow)
!     hDIB = GetClipboardData(CF_DIB)
!     wReturnValue = PrintDIB(hDIB, param_printOption, param_wScaleX, param_wScaleY, szJobName)
!     CloseClipboard()
!
!  ELSIF IsClipboardFormatAvailable(CF_BITMAP)
  IF IsClipboardFormatAvailable(CF_BITMAP)
     OpenClipboard(param_hWindow)
     hBitmap = GetClipboardData(CF_BITMAP)
     hDIB = BitmapToDIB(hBitmap,0)
     wReturnValue = PrintDIB2(hDIB, param_printOption, param_wScaleX, param_wScaleY, szJobName, ptOrigin)
     CloseClipboard()
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_ENHMETAFILE)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hMetafile = GetClipboardData(CF_ENHMETAFILE)
     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     CloseClipboard()

     ! convert bitmap to DIB
     ! and save to temporay file
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())
     wReturnValue = PrintDIB2(hDIB, param_printOption, param_wScaleX, param_wScaleY, szJobName, ptOrigin)

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_METAFILEPICT)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hGMem = GetClipboardData(CF_METAFILEPICT)
     pMFP = GlobalLock(hGMem)
     memcpy(ADDRESS(mfp),pMFP,SIZE(mfp))                         !Copy to local

     ! convert to enhanced metafile
     uBufSize = GetMetaFileBitsEx(mfp.hMF,0,0)
     lpMeta = GlobalAlloc(GPTR,uBufSize)
     GetMetaFileBitsEx(mfp.hMF,uBufSize,lpMeta)
     hMetaFile = SetWinMetaFileBits(uBufSize,lpMeta,hMemDC,pMFP)

     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     GlobalUnlock(hGMem)
     GlobalFree(lpMeta)
     CloseClipboard()

     ! convert bitmap to DIB
     ! and save to temporay file
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())
     wReturnValue = PrintDIB2(hDIB, param_printOption, param_wScaleX, param_wScaleY, szJobName, ptOrigin)

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)
     DeleteEnhMetaFile(hMetaFile)

  ELSE
     wReturnValue = ERR_FORMATNOTAVAILABLE
  END

  RETURN(wReturnValue)
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
ptOrigin             LIKE(POINT)
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_SaveClipboard
PROTOTYPE '(UNSIGNED  param_hWindow,  *CSTRING param_szFilename, BYTE param_Compress=0),USHORT,PROC'
PARAMETERS '(param_hWindow,  param_szFilename, param_Compress)'
GLOBAL
[COMMON]
DESCRIPTION 'Save Clipboard Bitmap'
FROM ABC Source
MODIFIED '2013/07/18' '12:43:04'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s9),USE(szJobName)
[REPORTCONTROLS]
! STRING(@s9),USE(szJobName)
szJobName                CSTRING(10)
!!> GUID('b859f673-5603-4d2e-8f0a-2228e9d52d15'),INITIAL('CLIPBOARD'),PROMPT('sz Job Name:'),HEADER('sz Job Name'),PICTURE(@s9)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hDC)
hDC                      HDC
!!> GUID('3ad50f29-92f3-4dae-9a9f-b3389dd2a1c3'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hBitmap)
hBitmap                  HBITMAP
!!> GUID('f58e90b2-5598-4053-ab46-e37d353a926c'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDIB)
[REPORTCONTROLS]
! STRING(@s20),USE(hDIB)
hDIB                     HDIB
!!> GUID('81e84a55-0ad8-477d-bc46-465839c6e836'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(clientRect)
[REPORTCONTROLS]
! STRING(@s20),USE(clientRect)
clientRect               LIKE(RECT)
!!> GUID('881f6546-8e8d-4817-9e60-daab2209c96b'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMetaFile)
[REPORTCONTROLS]
! STRING(@s20),USE(hMetaFile)
hMetaFile                HENHMETAFILE
!!> GUID('6b919cb6-0e8f-4776-812c-89354aac92ee'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(emh)
[REPORTCONTROLS]
! STRING(@s20),USE(emh)
emh                      LIKE(ENHMETAHEADER)
!!> GUID('f084762f-4b40-47a0-8516-1b446118b4a7'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hMemDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hMemDC)
hMemDC                   HDC
!!> GUID('80056733-12cb-4526-95cb-a92cbc8c9a1d'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hOldBitmap)
[REPORTCONTROLS]
! STRING(@s20),USE(hOldBitmap)
hOldBitmap               HBITMAP
!!> GUID('79c933d8-5f11-4972-9bd4-f355c37e96f2'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s7),USE(szDriver)
[REPORTCONTROLS]
! STRING(@s7),USE(szDriver)
szDriver                 CSTRING(8)
!!> GUID('45bfb68a-838a-4686-833c-6dc3306f1bb2'),INITIAL('DISPLAY'),PICTURE(@s7)
[SCREENCONTROLS]
! PROMPT('w Return Value:'),USE(?wReturnValue:Prompt)
! ENTRY(@n6),USE(wReturnValue)
[REPORTCONTROLS]
! STRING(@n6),USE(wReturnValue)
wReturnValue             USHORT
!!> GUID('cc5e113f-be6d-4cd9-90cf-6d4a124017a5'),PROMPT('w Return Value:'),HEADER('w Return Value'),PICTURE(@n6)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hGMem)
[REPORTCONTROLS]
! STRING(@s20),USE(hGMem)
hGMem                    HGLOBAL
!!> GUID('f2e3e6a8-7839-420b-a8d8-5dae8f023d9a'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(pMFP)
[REPORTCONTROLS]
! STRING(@n13),USE(pMFP)
pMFP                     ULONG
!!> GUID('9a585249-89de-4b84-a4a2-b8308e53fdcd'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(mfp)
[REPORTCONTROLS]
! STRING(@s20),USE(mfp)
mfp                      LIKE(METAFILEPICT)
!!> GUID('6ea75139-f8a5-4839-b4cd-25a2c2139d09'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(xScale)
[REPORTCONTROLS]
! STRING(@n13),USE(xScale)
xScale                   ULONG
!!> GUID('b9d6a21c-61b5-4277-8e67-3a4269e9e146'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(yScale)
[REPORTCONTROLS]
! STRING(@n13),USE(yScale)
yScale                   ULONG
!!> GUID('61db12ba-b018-4cc9-9ce3-ad732220d19e'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(iScale)
[REPORTCONTROLS]
! STRING(@n13),USE(iScale)
iScale                   ULONG
!!> GUID('9db644f0-5131-48a3-8f3a-623a037011b7'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@s20),USE(pt)
[REPORTCONTROLS]
! STRING(@s20),USE(pt)
pt                       LIKE(POINT)
!!> GUID('c7b1c9e1-807e-470d-bde3-f3c6e34cac6c'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n13),USE(uBufSize)
[REPORTCONTROLS]
! STRING(@n13),USE(uBufSize)
uBufSize                 ULONG
!!> GUID('3371a4e7-db20-4aa9-b663-3a0712595cc9'),PICTURE(@n13)
[SCREENCONTROLS]
! ENTRY(@n13),USE(lpMeta)
[REPORTCONTROLS]
! STRING(@n13),USE(lpMeta)
lpMeta                   ULONG
!!> GUID('1d13304b-ce25-4f48-a9f2-0c97eb7bf6af'),PICTURE(@n13)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  ELSE
     wReturnValue = FALSE
  END

!  IF IsClipboardFormatAvailable(CF_DIB)
!     OpenClipboard(param_hWindow)
!     hDIB = GetClipboardData(CF_DIB)
!     wReturnValue = SaveDIB(hDIB,param_szFileName)
!     CloseClipboard()

!  ELSIF IsClipboardFormatAvailable(CF_BITMAP)
  IF IsClipboardFormatAvailable(CF_BITMAP)
     OpenClipboard(param_hWindow)
     hBitmap = GetClipboardData(CF_BITMAP)
     hDIB = BitmapToDIB(hBitmap,0)
     IF param_Compress
        wReturnValue = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        wReturnValue = SaveDIB(hDIB,param_szFileName)
     END
     CloseClipboard()
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_ENHMETAFILE)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hMetafile = GetClipboardData(CF_ENHMETAFILE)
     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     CloseClipboard()

     ! convert bitmap to DIB
     ! and save to passed file
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())
     IF param_Compress
        wReturnValue = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        wReturnValue = SaveDIB(hDIB,param_szFileName)
     END

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)

  ELSIF IsClipboardFormatAvailable(CF_METAFILEPICT)
     ! create a DC for the screen and create
     ! a memory DC compatible to screen DC
     hDC = CreateDC(szDriver, 0, 0, 0)
     hMemDC = CreateCompatibleDC(hDC)

     ! get contents of clipboard
     OpenClipboard(param_hWindow)
     hGMem = GetClipboardData(CF_METAFILEPICT)
     pMFP = GlobalLock(hGMem)
     memcpy(ADDRESS(mfp),pMFP,SIZE(mfp))                         !Copy to local

     ! convert to enhanced metafile
     uBufSize = GetMetaFileBitsEx(mfp.hMF,0,0)
     lpMeta = GlobalAlloc(GPTR,uBufSize)
     GetMetaFileBitsEx(mfp.hMF,uBufSize,lpMeta)
     hMetaFile = SetWinMetaFileBits(uBufSize,lpMeta,hMemDC,pMFP)

     GetEnhMetaFileHeader(hMetafile,SIZE(emh),emh)
     clientRect.left = 0
     clientRect.top = 0
     clientRect.right = emh.rclFrame.right * GetDeviceCaps(hDC, HORZRES) / GetDeviceCaps(hDC, HORZSIZE) / 100
     clientRect.bottom = emh.rclFrame.bottom * GetDeviceCaps(hDC, VERTRES) / GetDeviceCaps(hDC, VERTSIZE) / 100

     ! create a compatible bitmap
     ! select bitmap into memory DC
     ! and play the metafile
     hBitmap = CreateCompatibleBitmap(hDC, clientRect.right, clientRect.bottom)
     hOldBitmap = SelectObject(hMemDC,hBitmap)
     PatBlt(hMemDC,0,0,clientRect.right,clientRect.bottom,WHITENESS)
     PlayEnhMetaFile(hMemDC,hMetaFile,clientRect)
     GlobalUnlock(hGMem)
     GlobalFree(lpMeta)
     CloseClipboard()

     ! convert bitmap to DIB
     ! and save to passed file
     hDIB = BitmapToDIB(hBitmap,GetSystemPalette())
     IF param_Compress
        wReturnValue = EncodeJPGFileFromDIB(hDIB, param_szFileName)
     ELSE
        wReturnValue = SaveDIB(hDIB,param_szFileName)
     END

     hBitmap = SelectObject(hMemDC, hOldBitmap)
     DeleteDC(hDC)
     DeleteDC(hMemDC)
     DeleteObject(hBitmap)
     GlobalFree(hDIB)
     DeleteEnhMetaFile(hMetaFile)

  ELSE
     wReturnValue = ERR_FORMATNOTAVAILABLE
  END

  RETURN(wReturnValue)
[END]
[END]
[END]
[MODULE]
NAME 'sctools010.clw'
[COMMON]
FROM ABC GENERATED
MODIFIED '2017/06/20' '11:06:28'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(ptOrigin)
[REPORTCONTROLS]
! STRING(@s20),USE(ptOrigin)
ptOrigin                 LIKE(POINT)
!!> GUID('1b33d649-6b2c-4f1d-bea2-e42ca8dcfa5b'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('b Rubber Band Mode:'),USE(?bRubberBandMode:Prompt)
! ENTRY(@n3),USE(bRubberBandMode)
[REPORTCONTROLS]
! STRING(@n3),USE(bRubberBandMode)
bRubberBandMode          BYTE
!!> GUID('2299dbcc-b1b0-4672-84fc-ef81cdb2dc81'),PROMPT('b Rubber Band Mode:'),HEADER('b Rubber Band Mode'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('sz Filename:'),USE(?szFilename:Prompt)
! TEXT,USE(szFilename)
[REPORTCONTROLS]
! TEXT,USE(szFilename)
szFilename               CSTRING(256)
!!> GUID('a109515c-c42b-4684-8c68-60b9510c1de1'),PROMPT('sz Filename:'),HEADER('sz Filename'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('b Compress:'),USE(?bCompress:Prompt)
! ENTRY(@n3),USE(bCompress)
[REPORTCONTROLS]
! STRING(@n3),USE(bCompress)
bCompress                BYTE
!!> GUID('b22050d8-dc0b-40e1-b531-e865eb5e73ad'),PROMPT('b Compress:'),HEADER('b Compress'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s20),USE(CurrentRect)
[REPORTCONTROLS]
! STRING(@s20),USE(CurrentRect)
CurrentRect              LIKE(RECT)
!!> GUID('1ff9bd82-5496-4a1c-81e3-0d7c5f4e1a83'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n3),USE(DrawRubberRect)
[REPORTCONTROLS]
! STRING(@n3),USE(DrawRubberRect)
DrawRubberRect           BYTE
!!> GUID('3ed244c5-f1d1-4b52-91ae-5a24b59e10ec'),INITIAL('0'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('print Option:'),USE(?printOption:Prompt)
! ENTRY(@n-14),USE(printOption),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(printOption),RIGHT(1)
printOption              LONG
!!> GUID('58f564dc-1bd5-4038-b43c-1e32b501d3d2'),PROMPT('print Option:'),HEADER('print Option'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@s20),USE(wScaleX)
[REPORTCONTROLS]
! STRING(@s20),USE(wScaleX)
wScaleX                  WORD
!!> GUID('411667a0-b318-4749-8ed9-0b0195347ddf'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(wScaleY)
[REPORTCONTROLS]
! STRING(@s20),USE(wScaleY)
wScaleY                  WORD
!!> GUID('a541bff1-248b-44df-a589-788879bbae3c'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('w Result:'),USE(?wResult:Prompt)
! ENTRY(@s20),USE(wResult)
[REPORTCONTROLS]
! STRING(@s20),USE(wResult)
wResult                  WORD
!!> GUID('232d6bcb-0851-4181-af2b-3f58b84b14a5'),PROMPT('w Result:'),HEADER('w Result'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(rptOrigin)
[REPORTCONTROLS]
! STRING(@s20),USE(rptOrigin)
rptOrigin                LIKE(POINT)
!!> GUID('ece068ec-4ef7-43f0-881c-3ee5d07bccba'),PICTURE(@s20)
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SCT_PrintSelectedArea
PROTOTYPE '(LONG param_PrintOption=1, LONG param_ScaleX=1, LONG param_ScaleY=1,LONG param_x, LONG param_y),USHORT,PROC'
PARAMETERS '(param_PrintOption, param_ScaleX, param_ScaleY, param_x, param_y)'
GLOBAL
[COMMON]
DESCRIPTION 'Create rubber banding window'
FROM ABC Source
MODIFIED '2013/07/18' '12:43:29'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hDC)
hDC                      HDC
!!> GUID('cf01aa6e-fb59-4dd7-8bb4-9316ff136d62'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(ScreenX)
[REPORTCONTROLS]
! STRING(@s20),USE(ScreenX)
ScreenX                  UNSIGNED
!!> GUID('eb26438f-728d-4f61-9ee1-10b8519c3f8b'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(ScreenY)
[REPORTCONTROLS]
! STRING(@s20),USE(ScreenY)
ScreenY                  UNSIGNED
!!> GUID('5e9dfba3-6a6a-42b3-a1d0-49135ef6155d'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s7),USE(szDriver)
[REPORTCONTROLS]
! STRING(@s7),USE(szDriver)
szDriver                 CSTRING(8)
!!> GUID('504976ba-8da9-4bab-9465-751cddf4ecbd'),INITIAL('DISPLAY'),PICTURE(@s7)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hWndRubberBand)
[REPORTCONTROLS]
! STRING(@s20),USE(hWndRubberBand)
hWndRubberBand           HWND
!!> GUID('dc95699a-2547-4533-9473-f96491639fb5'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(thisMsg)
[REPORTCONTROLS]
! STRING(@s20),USE(thisMsg)
thisMsg                  LIKE(MSGTYPE)
!!> GUID('c05fca5f-bf77-4001-a1f1-cd853c7ccd18'),PICTURE(@s20)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  END
  bRubberBandMode = PRINT_MODE
  printOption = param_PrintOption
  wScaleX = param_ScaleX
  wScaleY = param_ScaleY

  rptOrigin.x = param_x
  rptOrigin.y = param_y

  hDC = CreateDC(szDriver,0,0,0)
  ScreenX = GetDeviceCaps(hDC, HORZRES)
  ScreenY = GetDeviceCaps(hDC, VERTRES)
  DeleteDC(hDC)

  hWndRubberBand = CreateWindowEx(WS_EX_TRANSPARENT,        |   ! Window Ex Style
                                    SCT_szClassName,        |   ! Name of the window's class
                                    0,                      |   ! Text for window caption
                                    WS_POPUP + WS_VISIBLE,  |   ! Window Style
                                    0,                      |   ! Default horizontal position
                                    0,                      |   ! Default vertical position
                                    ScreenX,                |   ! Full screen width
                                    ScreenY,                |   ! Full screen height
                                    SCT_hWndApplication,    |   ! Child of Application Frame
                                    0,                      |   ! Use the window class menu
                                    SCT_hInstance,          |   ! This instance owns this window
                                    0)                          ! Pointer (not used)

  ShowWindow(hWndRubberBand, SW_SHOW)
  UpdateWindow(hWndRubberBand)
  LOOP WHILE(GetMessage(thisMsg,0,0,0))
    TranslateMessage(thisMsg)
    DispatchMessage(thisMsg)
  END
  RETURN(wResult)
[END]
[END]
[PROCEDURE]
NAME RubberBandWndProc
PROTOTYPE '(HWND hWnd, WORD wMessage, WORD wParam, LONG lParam),LONG,PASCAL'
PARAMETERS '(HWND hWnd, WORD wMessage, WORD wParam, LONG lParam)'
GLOBAL
NOEXPORT
[COMMON]
DESCRIPTION 'This is our Rubber Banding window message procedure.'
FROM ABC Source
MODIFIED '2013/07/18' '12:43:24'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  CASE wMessage
    OF WM_CREATE

    OF WM_DESTROY
       PostQuitMessage(0)

    OF WM_SYSCOMMAND

    OF WM_COMMAND

    OF WM_PAINT
       BeginPaint(hWnd, ps)
       EndPaint(hWnd, ps)

    OF WM_LBUTTONDOWN
       DrawRubberRect = TRUE

       ptOrigin.x = BAND(lParam,0FFFFh)
       ptOrigin.y = BAND(BSHIFT(lParam,-16),0FFFFh)
       ClientToScreen(hWnd,ptOrigin)
       CurrentRect.right = ptOrigin.x
       CurrentRect.left = ptOrigin.x
       CurrentRect.bottom = ptOrigin.y
       CurrentRect.top = ptOrigin.y
       NormalizeRect(CurrentRect)     ! Make sure it is a normal rect
       hDC = GetDC(hWnd)
       DrawSelect(hDC, TRUE, CurrentRect) ! Draw the rubber-band box
       wResult = ReleaseDC(hWnd,hDC)

    OF WM_LBUTTONUP
       ClipCursor(0)
       DrawRubberRect = FALSE
       hDC = GetDC(hWnd)
       DrawSelect(hDC, FALSE, CurrentRect)   ! erase old rubber-band
       IF ~IsRectEmpty(CurrentRect)
          CASE bRubberBandMode
            OF PRINT_MODE
               szJobName = 'Selected Area'
               wResult = PrintScreen2(CurrentRect, printOption, wScaleX, wScaleY, szJobName, rptOrigin)
            OF SAVE_MODE
               hDIB = CopyScreenToDIB(CurrentRect)
               IF UPPER(szFilename) = 'CLIPBOARD'
                  OpenClipboard(hWnd)
                  EmptyClipboard()
                  SetClipboardData(CF_DIB, hDIB)
                  CloseClipboard()
                  wResult = FALSE
               ELSE
                  IF bCompress
                     wResult = EncodeJPGFileFromDIB(hDIB,szFileName)
                  ELSE
                     wResult = SaveDIB(hDIB,szFileName)
                  END
               END
               GlobalFree(hDIB)
          END
       END
       DestroyWindow(hWnd)

    OF WM_MOUSEMOVE
       IF DrawRubberRect
          hDC = GetDC(hWnd)
          DrawSelect(hDC, FALSE, CurrentRect)   ! erase old rubber-band
          CurrentRect.left = ptOrigin.x         ! Update rect with new mouse info
          CurrentRect.top = ptOrigin.y
          pt.x = BAND(lParam,0FFFFh)
          pt.y = BAND(BSHIFT(lParam,-16),0FFFFh)

          ! Convert to screen coordinates
          ClientToScreen(hWnd, pt)
          CurrentRect.right = pt.x
          CurrentRect.bottom = pt.y
          NormalizeRect(CurrentRect)
          DrawSelect(hDC, TRUE, CurrentRect) ! And draw the new rubber-band
          wResult = ReleaseDC(hWnd,hDC)
       ELSE
       END

  END

  RETURN DefWindowProc(hWnd, wMessage, wParam, lParam)

[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
!**********************************************************************
! RubberBandWndProc()
!
! This is our Rubber Banding window message procedure.
!
! History   Date      Author              Reason
!            12/31/99  Randy Rogers        Created
!*********************************************************************
ps          LIKE(PAINTSTRUCT)
pt          LIKE(POINT)
hDC         HDC
BKcolor     COLORREF
hPen        HANDLE
hPenOrig    HANDLE
hBr         HANDLE
hBrOrig     HANDLE
szJobName   CSTRING(64)
hDIB        HDIB
[END]
[END]
[CALLS]
DrawSelect
NormalizeRect
[PROCEDURE]
NAME SCT_SaveSelectedArea
PROTOTYPE '(*CSTRING param_szFilename, BYTE param_Compress=0),USHORT,PROC'
PARAMETERS '(param_szFilename, param_Compress)'
GLOBAL
[COMMON]
DESCRIPTION 'Create rubber banding window'
FROM ABC Source
MODIFIED '2013/07/18' '12:43:36'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(hDC)
[REPORTCONTROLS]
! STRING(@s20),USE(hDC)
hDC                      HDC
!!> GUID('9678cc36-e029-4670-b6af-898e2ebc2827'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(ScreenX)
[REPORTCONTROLS]
! STRING(@s20),USE(ScreenX)
ScreenX                  UNSIGNED
!!> GUID('457ea42d-584a-47c8-b162-d77620bce330'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(ScreenY)
[REPORTCONTROLS]
! STRING(@s20),USE(ScreenY)
ScreenY                  UNSIGNED
!!> GUID('5c621e61-bc24-4891-9274-f11f307c7242'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s7),USE(szDriver)
[REPORTCONTROLS]
! STRING(@s7),USE(szDriver)
szDriver                 CSTRING(8)
!!> GUID('fe30a7f1-929b-4680-94d2-d29ae1cddacd'),INITIAL('DISPLAY'),PICTURE(@s7)
[SCREENCONTROLS]
! ENTRY(@s20),USE(hWndRubberBand)
[REPORTCONTROLS]
! STRING(@s20),USE(hWndRubberBand)
hWndRubberBand           HWND
!!> GUID('e9a1cca1-506d-4720-9f25-f706eb34169a'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(thisMsg)
[REPORTCONTROLS]
! STRING(@s20),USE(thisMsg)
thisMsg                  LIKE(MSGTYPE)
!!> GUID('5768a9d2-d406-4e7d-8e1b-070d112f6aa9'),PICTURE(@s20)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF ~SCT_bInitialized
     RETURN(ERR_NOTINITIALIZED)
  END
  bRubberBandMode = SAVE_MODE
  szFilename = param_szFilename
  bCompress = param_Compress
  hDC = CreateDC(szDriver,0,0,0)
  ScreenX = GetDeviceCaps(hDC, HORZRES)
  ScreenY = GetDeviceCaps(hDC, VERTRES)
  DeleteDC(hDC)

  hWndRubberBand = CreateWindowEx(WS_EX_TRANSPARENT,        |   ! Window Ex Style
                                    SCT_szClassName,        |   ! Name of the window's class
                                    0,                      |   ! Text for window caption
                                    WS_POPUP + WS_VISIBLE,  |   ! Window Style
                                    0,                      |   ! Default horizontal position
                                    0,                      |   ! Default vertical position
                                    ScreenX,                |   ! Full screen width
                                    ScreenY,                |   ! Full screen height
                                    SCT_hWndApplication,    |   ! Child of Application Frame
                                    0,                      |   ! Use the window class menu
                                    SCT_hInstance,          |   ! This instance owns this window
                                    0)                          ! Pointer (not used)

  ShowWindow(hWndRubberBand, SW_SHOW)
  UpdateWindow(hWndRubberBand)
  LOOP WHILE(GetMessage(thisMsg,0,0,0))
    TranslateMessage(thisMsg)
    DispatchMessage(thisMsg)
  END
  RETURN(wResult)
[END]
[END]
[PROCEDURE]
NAME NormalizeRect
PROTOTYPE '(*RECT prc)'
PARAMETERS '(*RECT prc)'
GLOBAL
NOEXPORT
[COMMON]
DESCRIPTION 'If the rectangle coordinates are reversed, swaps them.'
FROM ABC Source
MODIFIED '2013/07/18' '12:43:19'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF prc.right < prc.left
     sTemp = prc.right
     prc.right = prc.left
     prc.left = sTemp
  END
  IF prc.bottom < prc.top
     sTemp = prc.bottom
     prc.bottom = prc.top
     prc.top = sTemp
  END
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
!*************************************************************************
!  FUNCTION   : NormalizeRect(RECT *prc)
!
!  PURPOSE    : If the rectangle coordinates are reversed, swaps them.
!               This is used to make sure that the first coordinate of
!               our rect is the upper left, and the second is lower right.
!
! History:   Date      Author         Reason
!            9/15/91   Mark Bader     Created from SHOWDIB code
!            12/24/99  Randy Rogers   Converted to Clarion for Windows C5b
!*************************************************************************
sTemp   SIGNED
[END]
[END]
[PROCEDURE]
NAME DrawSelect
PROTOTYPE '(HDC hdc,BOOL fDraw,*RECT lprClip)'
PARAMETERS '(HDC hdc,BOOL fDraw,*RECT lprClip)'
GLOBAL
NOEXPORT
[COMMON]
DESCRIPTION 'Draws the selected clip rectangle with its dimensions on the DC'
FROM ABC Source
CATEGORY 'WinCap'
MODIFIED '2013/07/18' '13:13:08'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  rcClip = lprClip
  IF ~IsRectEmpty(rcClip)
     ! If a rectangular clip region has been selected, draw it
     PatBlt(hdc, rcClip.left, rcClip.top, rcClip.right - rcClip.left, 1, DSTINVERT)
     PatBlt(hdc, rcClip.left, rcClip.bottom, 1, -(rcClip.bottom - rcClip.top), DSTINVERT)
     PatBlt(hdc, rcClip.right - 1, rcClip.top, 1, rcClip.bottom - rcClip.top, DSTINVERT)
     PatBlt(hdc, rcClip.right, rcClip.bottom - 1, -(rcClip.right - rcClip.left), 1, DSTINVERT)

     ! Format the dimensions string ...
     sz = FORMAT(rcClip.right - rcClip.left,@n_4) & ' x ' & FORMAT(rcClip.bottom - rcClip.top,@n_4)
     len = LEN(CLIP(sz))

     ! ... and center it in the rectangle
  COMPILE('****',_WIDTH32_)
     GetTextExtentPoint32(hdc,sz,len,lpSize)
     dx = lpSize.cx
     dy = lpSize.cy
  ****
  OMIT('****',_WIDTH32_)
     dw = GetTextExtent(hdc, sz, len)
     dx = BAND(dw,0FFFFh)
     dy = BAND(BSHIFT(dw,-16),0FFFFh)
  ****
     x = (rcClip.right + rcClip.left - dx) / 2
     y = (rcClip.bottom + rcClip.top - dy) / 2
     hdcBits = CreateCompatibleDC(hdc)
     SetTextColor(hdcBits, 0FFFFFFh)
     SetBkColor(hdcBits, 0000000h)

     ! Output the text to the DC
     hbm = CreateBitmap(dx, dy, 1, 1, 0)
     IF hbm
        hbm = SelectObject(hdcBits, hbm)
        ExtTextOut(hdcBits, 0, 0, 0, 0, sz, len, 0)
        BitBlt(hdc, x, y, dx, dy, hdcBits, 0, 0, SRCINVERT)
        hbm = SelectObject(hdcBits, hbm)
        DeleteObject(hbm)
     END
     DeleteDC(hdcBits)
  END
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Devuna
!          Distributed under the MIT License (https://opensource.org/licenses/MIT)
!
!    This file is part of Devuna-ScreenCaptureTools (https://github.com/Devuna/Devuna-ScreenCaptureTools)
!
!    Devuna-ScreenCaptureTools is free software: you can redistribute it and/or modify
!    it under the terms of the MIT License as published by
!    the Open Source Initiative.
!
!    Devuna-ScreenCaptureTools is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    MIT License for more details.
!
!    You should have received a copy of the MIT License
!    along with Devuna-ScreenCaptureTools.  If not, see <https://opensource.org/licenses/MIT>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
!***************************************************************************
!
! DrawSelect
!
! Draws the selected clip rectangle with its dimensions on the DC
!
! History:   Date      Author         Reason
!            9/15/91   Mark Bader     Created from SHOWDIB code
!            12/24/99  Randy Rogers   Converted to Clarion for Windows C5b
!***************************************************************************
sz      CSTRING(80)
dw      DWORD
x       SIGNED
y       SIGNED
len     SIGNED
dx      SIGNED
dy      SIGNED
hdcBits HDC
hbm     HBITMAP
rcClip  LIKE(RECT)
lpSize  LIKE(SIZE)
[END]
[END]
[END]
